package br.com.neolog.ecommerce.cart;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.neolog.ecommerce.customer.Customer;

@RestController
@RequestMapping( value = "cart" )
public class CartController
{

    @Autowired
    private CartService cartService;

    @GetMapping( "search" )
    public ResponseEntity<List<Cart>> listAll()
    {
        return new ResponseEntity<List<Cart>>( cartService.listAll(), HttpStatus.OK );

    }

    @GetMapping( "search/{id}" )
    public ResponseEntity<Cart> listAll(
        @PathVariable( "id" ) final int id )
    {
        return new ResponseEntity<Cart>( cartService.findById( id ), HttpStatus.OK );

    }

    @PostMapping( "customerCart" )
    public ResponseEntity<Cart> activeCustomerCart(
        @RequestBody @Valid final Customer customer )
    {
        return new ResponseEntity<Cart>( cartService.getActiveCustomerCart(), HttpStatus.OK );

    }

    @PostMapping( "cancelCart" )
    public ResponseEntity<Cart> cancelCustomerCart(
        @RequestBody @Valid final Customer customer )
    {
        return new ResponseEntity<Cart>( cartService.cancelActiveCart(), HttpStatus.OK );

    }

    @PostMapping( "checkout" )
    public ResponseEntity<Cart> checkoutCart(
        @RequestBody @Valid final Customer customer )
    {
        return new ResponseEntity<Cart>( cartService.checkout(), HttpStatus.OK );

    }

    @PostMapping( "addItemToCart" )
    public ResponseEntity<CartItem> addItemToCart(
        @RequestBody final HolderCartItem holderCartItem )
    {
        return new ResponseEntity<CartItem>( cartService.addItemToCart( holderCartItem ), HttpStatus.OK );
    }

    @PostMapping( "removeQuantity" )
    public ResponseEntity<Cart> removeQuantity(
        @RequestBody final HolderCartItem holderCartItem )
    {
        return new ResponseEntity<Cart>( cartService.removeProductQuantityFromCartItem( holderCartItem ), HttpStatus.OK );
    }

    @PostMapping( "removeCartItem/{cartItemId}" )
    public ResponseEntity<Cart> removeCartItem(
        @PathVariable( "cartItemId" ) final int cartItemId )
    {
        return new ResponseEntity<Cart>( cartService.removeCartItem( cartItemId ), HttpStatus.OK );
    }

}
